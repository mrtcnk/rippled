#!/bin/bash
# Use conan to build a clang.debug.nounity version of rippled.

# Make sure a CMakeLists.txt is present before we continue.
if [ ! -e ./CMakeLists.txt ]
    then
        echo "No CMakeLists.txt file present.  Cannot proceed."
        exit 1
fi

# Remove any old executable, but don't error if there's not one there.
rm build/rippled || true

# If the build directory does not yet exist, make it.
if [ ! -d ./build ]
    then
        mkdir ./build
fi

# If the build/conan directory does not yet exist, make it.
if [ ! -d ./build/conan ]
    then
        mkdir ./build/conan
fi

# If the CMakeLists.txt or the conanfile.py in the build root are different
# from the files saved in build/conan, then we need to build from scratch.  In
# this case we clear ~/.conan/data as well as everything below ./build/conan.
if { ! cmp ./CMakeLists.txt ./build/conan/CMakeLists.txt; } || \
   { ! cmp ./conanfile.py ./build/conan/conanfile.py; }
    then
        echo CMakeLists.txt or conanfile.py changed.
        echo Nuking ~/.conan/data and ./build/conan.
        rm -fr ~/.conan/data || true
        rm -fr ./build/conan/* || true
        cp ./CMakeLists.txt ./build/conan/CMakeLists.txt
        cp ./conanfile.py ./build/conan/conanfile.py
fi

SOURCE_DIR="../../.."
BUILD_SUBDIR="clang.debug.nounity"
# If the build type directory does not yet exist, make it.
if [ ! -d ./build/conan/${BUILD_SUBDIR} ]
    then
        mkdir ./build/conan/${BUILD_SUBDIR}
fi

# If conan/cmake has not yet run, run it.
if [ ! -e ./build/conan/${BUILD_SUBDIR}/Makefile ]
    then
        cd ./build/conan/${BUILD_SUBDIR}
        conan install ${SOURCE_DIR} --output-folder . --build missing --settings build_type=Debug
        cmake -DCMAKE_BUILD_TYPE=Debug -Dunity=OFF -Dassert=ON -Dwerr=ON -Dwextra=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH=build/generators/conan_toolchain.cmake ${SOURCE_DIR}

# The next line prints how make invokes the compiler
#       cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_VERBOSE_MAKEFILE=ON -Dunity=OFF -Dassert=ON -Dwerr=ON -Dwextra=ON -DCMAKE_TOOLCHAIN_FILE:FILEPATH=build/generators/conan_toolchain.cmake ${SOURCE_DIR}
        cd ${SOURCE_DIR}
fi

# Invoke the Makefile.  If it's successful, copy the executable.
# We cp rather than mv the executable to avoid unnecessary re-links.
echo "Invoking ./build/conan/${BUILD_SUBDIR}/Makefile"
cd ./build/conan/${BUILD_SUBDIR}
make -j4 && cp ./rippled ../../
# make -j1 && cp ./rippled ../../
cd ${SOURCE_DIR}
